//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BquizDB.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BquizEntities : DbContext
    {
        public BquizEntities()
            : base("name=BquizEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<bq_Answer> bq_Answer { get; set; }
        public DbSet<bq_Part> bq_Part { get; set; }
        public DbSet<bq_Question> bq_Question { get; set; }
        public DbSet<bq_QuestionGroup> bq_QuestionGroup { get; set; }
        public DbSet<bq_Quiz> bq_Quiz { get; set; }
        public DbSet<bq_Test> bq_Test { get; set; }
        public DbSet<bq_User> bq_User { get; set; }
    
        public virtual ObjectResult<Nullable<int>> qz_Answer_DeleteByQuizId(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Answer_DeleteByQuizId", quizIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Answer_DeleteByTestId(Nullable<System.Guid> testId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Answer_DeleteByTestId", testIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetByGroupId(Nullable<System.Guid> groupId, Nullable<System.Guid> testId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(System.Guid));
    
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetByGroupId", groupIdParameter, testIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetByGroupId(Nullable<System.Guid> groupId, Nullable<System.Guid> testId, MergeOption mergeOption)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(System.Guid));
    
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetByGroupId", mergeOption, groupIdParameter, testIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetById(Nullable<System.Guid> testId, Nullable<System.Guid> questionId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetById", testIdParameter, questionIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetById(Nullable<System.Guid> testId, Nullable<System.Guid> questionId, MergeOption mergeOption)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetById", mergeOption, testIdParameter, questionIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetByTestId(Nullable<System.Guid> testId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetByTestId", testIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetByTestId(Nullable<System.Guid> testId, MergeOption mergeOption)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetByTestId", mergeOption, testIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Answer_Modify(Nullable<System.Guid> testId, Nullable<System.Guid> questionId, Nullable<byte> answer)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Answer_Modify", testIdParameter, questionIdParameter, answerParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_QuestionDone(Nullable<System.Guid> testId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_QuestionDone", testIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_QuestionDone(Nullable<System.Guid> testId, MergeOption mergeOption)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_QuestionDone", mergeOption, testIdParameter);
        }
    
        public virtual ObjectResult<bq_Part> qz_Part_GetAllChilds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Part>("qz_Part_GetAllChilds");
        }
    
        public virtual ObjectResult<bq_Part> qz_Part_GetAllChilds(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Part>("qz_Part_GetAllChilds", mergeOption);
        }
    
        public virtual ObjectResult<bq_Part> qz_Part_GetById(Nullable<byte> partId)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Part>("qz_Part_GetById", partIdParameter);
        }
    
        public virtual ObjectResult<bq_Part> qz_Part_GetById(Nullable<byte> partId, MergeOption mergeOption)
        {
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Part>("qz_Part_GetById", mergeOption, partIdParameter);
        }
    
        public virtual ObjectResult<bq_Part> qz_Part_GetByParentId(Nullable<byte> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Part>("qz_Part_GetByParentId", parentIdParameter);
        }
    
        public virtual ObjectResult<bq_Part> qz_Part_GetByParentId(Nullable<byte> parentId, MergeOption mergeOption)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Part>("qz_Part_GetByParentId", mergeOption, parentIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_Add(Nullable<System.Guid> questionId, Nullable<System.Guid> questionGroupId, Nullable<System.Guid> quizId, Nullable<byte> order, string imagePath, string mediaPath, string paragraph, string optionA, string optionB, string optionC, string optionD, Nullable<byte> answer)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(byte));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            var mediaPathParameter = mediaPath != null ?
                new ObjectParameter("mediaPath", mediaPath) :
                new ObjectParameter("mediaPath", typeof(string));
    
            var paragraphParameter = paragraph != null ?
                new ObjectParameter("paragraph", paragraph) :
                new ObjectParameter("paragraph", typeof(string));
    
            var optionAParameter = optionA != null ?
                new ObjectParameter("optionA", optionA) :
                new ObjectParameter("optionA", typeof(string));
    
            var optionBParameter = optionB != null ?
                new ObjectParameter("optionB", optionB) :
                new ObjectParameter("optionB", typeof(string));
    
            var optionCParameter = optionC != null ?
                new ObjectParameter("optionC", optionC) :
                new ObjectParameter("optionC", typeof(string));
    
            var optionDParameter = optionD != null ?
                new ObjectParameter("optionD", optionD) :
                new ObjectParameter("optionD", typeof(string));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_Add", questionIdParameter, questionGroupIdParameter, quizIdParameter, orderParameter, imagePathParameter, mediaPathParameter, paragraphParameter, optionAParameter, optionBParameter, optionCParameter, optionDParameter, answerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_DeleteByQuizId(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_DeleteByQuizId", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Question> qz_Question_GetById(Nullable<System.Guid> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Question>("qz_Question_GetById", questionIdParameter);
        }
    
        public virtual ObjectResult<bq_Question> qz_Question_GetById(Nullable<System.Guid> questionId, MergeOption mergeOption)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Question>("qz_Question_GetById", mergeOption, questionIdParameter);
        }
    
        public virtual ObjectResult<bq_Question> qz_Question_GetByQuestionGroupId(Nullable<System.Guid> questionGroupId)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Question>("qz_Question_GetByQuestionGroupId", questionGroupIdParameter);
        }
    
        public virtual ObjectResult<bq_Question> qz_Question_GetByQuestionGroupId(Nullable<System.Guid> questionGroupId, MergeOption mergeOption)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Question>("qz_Question_GetByQuestionGroupId", mergeOption, questionGroupIdParameter);
        }
    
        public virtual ObjectResult<bq_Question> qz_Question_GetByQuizId(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Question>("qz_Question_GetByQuizId", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Question> qz_Question_GetByQuizId(Nullable<System.Guid> quizId, MergeOption mergeOption)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Question>("qz_Question_GetByQuizId", mergeOption, quizIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_Update(Nullable<System.Guid> questionId, string paragraph, string optionA, string optionB, string optionC, string optionD, Nullable<byte> answer)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var paragraphParameter = paragraph != null ?
                new ObjectParameter("paragraph", paragraph) :
                new ObjectParameter("paragraph", typeof(string));
    
            var optionAParameter = optionA != null ?
                new ObjectParameter("optionA", optionA) :
                new ObjectParameter("optionA", typeof(string));
    
            var optionBParameter = optionB != null ?
                new ObjectParameter("optionB", optionB) :
                new ObjectParameter("optionB", typeof(string));
    
            var optionCParameter = optionC != null ?
                new ObjectParameter("optionC", optionC) :
                new ObjectParameter("optionC", typeof(string));
    
            var optionDParameter = optionD != null ?
                new ObjectParameter("optionD", optionD) :
                new ObjectParameter("optionD", typeof(string));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_Update", questionIdParameter, paragraphParameter, optionAParameter, optionBParameter, optionCParameter, optionDParameter, answerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_UpdateImagePath(Nullable<System.Guid> questionId, string imagePath)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_UpdateImagePath", questionIdParameter, imagePathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_UpdateMediaPath(Nullable<System.Guid> questionId, string mediaPath)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var mediaPathParameter = mediaPath != null ?
                new ObjectParameter("mediaPath", mediaPath) :
                new ObjectParameter("mediaPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_UpdateMediaPath", questionIdParameter, mediaPathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_UpdateStatus(Nullable<System.Guid> questionId)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_UpdateStatus", questionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_QuestionGroup_Add(Nullable<System.Guid> questionGroupId, Nullable<System.Guid> quizId, Nullable<byte> partId, string name, Nullable<byte> order, string paragraph, string mediaPath)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(byte));
    
            var paragraphParameter = paragraph != null ?
                new ObjectParameter("paragraph", paragraph) :
                new ObjectParameter("paragraph", typeof(string));
    
            var mediaPathParameter = mediaPath != null ?
                new ObjectParameter("mediaPath", mediaPath) :
                new ObjectParameter("mediaPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_QuestionGroup_Add", questionGroupIdParameter, quizIdParameter, partIdParameter, nameParameter, orderParameter, paragraphParameter, mediaPathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_QuestionGroup_DeleteByQuizId(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_QuestionGroup_DeleteByQuizId", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetById(Nullable<System.Guid> questionGroupId)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetById", questionGroupIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetById(Nullable<System.Guid> questionGroupId, MergeOption mergeOption)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetById", mergeOption, questionGroupIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetByQuiz(Nullable<System.Guid> quizId, Nullable<byte> partId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetByQuiz", quizIdParameter, partIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetByQuiz(Nullable<System.Guid> quizId, Nullable<byte> partId, MergeOption mergeOption)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetByQuiz", mergeOption, quizIdParameter, partIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetByQuizId(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetByQuizId", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetByQuizId(Nullable<System.Guid> quizId, MergeOption mergeOption)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetByQuizId", mergeOption, quizIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_QuestionGroup_Update(Nullable<System.Guid> questionGroupId, string paragraph)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            var paragraphParameter = paragraph != null ?
                new ObjectParameter("paragraph", paragraph) :
                new ObjectParameter("paragraph", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_QuestionGroup_Update", questionGroupIdParameter, paragraphParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_QuestionGroup_UpdateMediaPath(Nullable<System.Guid> questionGroupId, string mediaPath)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            var mediaPathParameter = mediaPath != null ?
                new ObjectParameter("mediaPath", mediaPath) :
                new ObjectParameter("mediaPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_QuestionGroup_UpdateMediaPath", questionGroupIdParameter, mediaPathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_QuestionGroup_UpdateStatus(Nullable<System.Guid> questionGroupId)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_QuestionGroup_UpdateStatus", questionGroupIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_Add(Nullable<System.Guid> quizId, Nullable<System.Guid> userId, string name, string financeCompany, string companyIcon)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var financeCompanyParameter = financeCompany != null ?
                new ObjectParameter("financeCompany", financeCompany) :
                new ObjectParameter("financeCompany", typeof(string));
    
            var companyIconParameter = companyIcon != null ?
                new ObjectParameter("companyIcon", companyIcon) :
                new ObjectParameter("companyIcon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_Add", quizIdParameter, userIdParameter, nameParameter, financeCompanyParameter, companyIconParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_Delete(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_Delete", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetById(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetById", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetById(Nullable<System.Guid> quizId, MergeOption mergeOption)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetById", mergeOption, quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetByUserId(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetByUserId(Nullable<System.Guid> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetByUserId", mergeOption, userIdParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetEnable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetEnable");
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetEnable(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetEnable", mergeOption);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_Update(Nullable<System.Guid> quizId, string name, string financeCompany, string companyIcon)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var financeCompanyParameter = financeCompany != null ?
                new ObjectParameter("financeCompany", financeCompany) :
                new ObjectParameter("financeCompany", typeof(string));
    
            var companyIconParameter = companyIcon != null ?
                new ObjectParameter("companyIcon", companyIcon) :
                new ObjectParameter("companyIcon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_Update", quizIdParameter, nameParameter, financeCompanyParameter, companyIconParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_UpdateCompanyIcon(Nullable<System.Guid> quizId, string companyIcon)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var companyIconParameter = companyIcon != null ?
                new ObjectParameter("companyIcon", companyIcon) :
                new ObjectParameter("companyIcon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_UpdateCompanyIcon", quizIdParameter, companyIconParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_UpdateNumberOfTesting(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_UpdateNumberOfTesting", quizIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_UpdateStatus(Nullable<System.Guid> quizId, Nullable<byte> status)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_UpdateStatus", quizIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Test_Create(Nullable<System.Guid> testId, Nullable<System.Guid> userId, Nullable<System.Guid> quizId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Test_Create", testIdParameter, userIdParameter, quizIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Test_DeleteByQuizId(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Test_DeleteByQuizId", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Test> qz_Test_GetById(Nullable<System.Guid> testId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Test>("qz_Test_GetById", testIdParameter);
        }
    
        public virtual ObjectResult<bq_Test> qz_Test_GetById(Nullable<System.Guid> testId, MergeOption mergeOption)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Test>("qz_Test_GetById", mergeOption, testIdParameter);
        }
    
        public virtual ObjectResult<bq_Test> qz_Test_GetByUserId(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Test>("qz_Test_GetByUserId", userIdParameter);
        }
    
        public virtual ObjectResult<bq_Test> qz_Test_GetByUserId(Nullable<System.Guid> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Test>("qz_Test_GetByUserId", mergeOption, userIdParameter);
        }
    
        public virtual ObjectResult<bq_Test> qz_Test_GetTop10(Nullable<System.Guid> quizId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Test>("qz_Test_GetTop10", quizIdParameter);
        }
    
        public virtual ObjectResult<bq_Test> qz_Test_GetTop10(Nullable<System.Guid> quizId, MergeOption mergeOption)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Test>("qz_Test_GetTop10", mergeOption, quizIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Test_UpdateMark(Nullable<System.Guid> testId, Nullable<int> mark)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var markParameter = mark.HasValue ?
                new ObjectParameter("mark", mark) :
                new ObjectParameter("mark", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Test_UpdateMark", testIdParameter, markParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_User_Create(Nullable<System.Guid> userId, string userName, string email, Nullable<bool> gender, Nullable<System.DateTime> birthday)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(bool));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_User_Create", userIdParameter, userNameParameter, emailParameter, genderParameter, birthdayParameter);
        }
    
        public virtual ObjectResult<bq_User> qz_User_GetById(Nullable<System.Guid> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_User>("qz_User_GetById", userIdParameter);
        }
    
        public virtual ObjectResult<bq_User> qz_User_GetById(Nullable<System.Guid> userId, MergeOption mergeOption)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_User>("qz_User_GetById", mergeOption, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_User_Update(Nullable<System.Guid> userId, string userName, Nullable<bool> gender, Nullable<System.DateTime> birthday)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var genderParameter = gender.HasValue ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(bool));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("birthday", birthday) :
                new ObjectParameter("birthday", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_User_Update", userIdParameter, userNameParameter, genderParameter, birthdayParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_User_UpdateAvatar(Nullable<System.Guid> userId, string avatar)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("avatar", avatar) :
                new ObjectParameter("avatar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_User_UpdateAvatar", userIdParameter, avatarParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Answer_Create(Nullable<System.Guid> testId, Nullable<System.Guid> questionId, Nullable<byte> answer)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Answer_Create", testIdParameter, questionIdParameter, answerParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetDoneQuestion(Nullable<System.Guid> testId)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetDoneQuestion", testIdParameter);
        }
    
        public virtual ObjectResult<bq_Answer> qz_Answer_GetDoneQuestion(Nullable<System.Guid> testId, MergeOption mergeOption)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Answer>("qz_Answer_GetDoneQuestion", mergeOption, testIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Answer_Update(Nullable<System.Guid> testId, Nullable<System.Guid> questionId, Nullable<byte> answer)
        {
            var testIdParameter = testId.HasValue ?
                new ObjectParameter("testId", testId) :
                new ObjectParameter("testId", typeof(System.Guid));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Answer_Update", testIdParameter, questionIdParameter, answerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Question_Create(Nullable<System.Guid> questionId, Nullable<System.Guid> questionGroupId, Nullable<System.Guid> quizId, Nullable<byte> order, string imagePath, string mediaPath, string paragraph, string optionA, string optionB, string optionC, string optionD, Nullable<byte> answer)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("questionId", questionId) :
                new ObjectParameter("questionId", typeof(System.Guid));
    
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(byte));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("imagePath", imagePath) :
                new ObjectParameter("imagePath", typeof(string));
    
            var mediaPathParameter = mediaPath != null ?
                new ObjectParameter("mediaPath", mediaPath) :
                new ObjectParameter("mediaPath", typeof(string));
    
            var paragraphParameter = paragraph != null ?
                new ObjectParameter("paragraph", paragraph) :
                new ObjectParameter("paragraph", typeof(string));
    
            var optionAParameter = optionA != null ?
                new ObjectParameter("optionA", optionA) :
                new ObjectParameter("optionA", typeof(string));
    
            var optionBParameter = optionB != null ?
                new ObjectParameter("optionB", optionB) :
                new ObjectParameter("optionB", typeof(string));
    
            var optionCParameter = optionC != null ?
                new ObjectParameter("optionC", optionC) :
                new ObjectParameter("optionC", typeof(string));
    
            var optionDParameter = optionD != null ?
                new ObjectParameter("optionD", optionD) :
                new ObjectParameter("optionD", typeof(string));
    
            var answerParameter = answer.HasValue ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Question_Create", questionIdParameter, questionGroupIdParameter, quizIdParameter, orderParameter, imagePathParameter, mediaPathParameter, paragraphParameter, optionAParameter, optionBParameter, optionCParameter, optionDParameter, answerParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_QuestionGroup_Create(Nullable<System.Guid> questionGroupId, Nullable<System.Guid> quizId, Nullable<byte> partId, string name, Nullable<byte> order, string paragraph, string mediaPath)
        {
            var questionGroupIdParameter = questionGroupId.HasValue ?
                new ObjectParameter("questionGroupId", questionGroupId) :
                new ObjectParameter("questionGroupId", typeof(System.Guid));
    
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(byte));
    
            var paragraphParameter = paragraph != null ?
                new ObjectParameter("paragraph", paragraph) :
                new ObjectParameter("paragraph", typeof(string));
    
            var mediaPathParameter = mediaPath != null ?
                new ObjectParameter("mediaPath", mediaPath) :
                new ObjectParameter("mediaPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_QuestionGroup_Create", questionGroupIdParameter, quizIdParameter, partIdParameter, nameParameter, orderParameter, paragraphParameter, mediaPathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_Create(Nullable<System.Guid> quizId, Nullable<System.Guid> userId, string name, string financeCompany, string companyIcon)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var financeCompanyParameter = financeCompany != null ?
                new ObjectParameter("financeCompany", financeCompany) :
                new ObjectParameter("financeCompany", typeof(string));
    
            var companyIconParameter = companyIcon != null ?
                new ObjectParameter("companyIcon", companyIcon) :
                new ObjectParameter("companyIcon", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_Create", quizIdParameter, userIdParameter, nameParameter, financeCompanyParameter, companyIconParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetByStatus(Nullable<int> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetByStatus", statusParameter);
        }
    
        public virtual ObjectResult<bq_Quiz> qz_Quiz_GetByStatus(Nullable<int> status, MergeOption mergeOption)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_Quiz>("qz_Quiz_GetByStatus", mergeOption, statusParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetByPartId(Nullable<System.Guid> quizId, Nullable<byte> partId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetByPartId", quizIdParameter, partIdParameter);
        }
    
        public virtual ObjectResult<bq_QuestionGroup> qz_QuestionGroup_GetByPartId(Nullable<System.Guid> quizId, Nullable<byte> partId, MergeOption mergeOption)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var partIdParameter = partId.HasValue ?
                new ObjectParameter("partId", partId) :
                new ObjectParameter("partId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_QuestionGroup>("qz_QuestionGroup_GetByPartId", mergeOption, quizIdParameter, partIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_Create2(Nullable<System.Guid> quizId, Nullable<System.Guid> userId, string name, string englishCenter, string englishCenterIcon, string englishCenterDescription)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var englishCenterParameter = englishCenter != null ?
                new ObjectParameter("englishCenter", englishCenter) :
                new ObjectParameter("englishCenter", typeof(string));
    
            var englishCenterIconParameter = englishCenterIcon != null ?
                new ObjectParameter("englishCenterIcon", englishCenterIcon) :
                new ObjectParameter("englishCenterIcon", typeof(string));
    
            var englishCenterDescriptionParameter = englishCenterDescription != null ?
                new ObjectParameter("englishCenterDescription", englishCenterDescription) :
                new ObjectParameter("englishCenterDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_Create2", quizIdParameter, userIdParameter, nameParameter, englishCenterParameter, englishCenterIconParameter, englishCenterDescriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_Update2(Nullable<System.Guid> quizId, string name, string englishCenter, string englishCenterIcon, string englishCenterDescription)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var englishCenterParameter = englishCenter != null ?
                new ObjectParameter("englishCenter", englishCenter) :
                new ObjectParameter("englishCenter", typeof(string));
    
            var englishCenterIconParameter = englishCenterIcon != null ?
                new ObjectParameter("englishCenterIcon", englishCenterIcon) :
                new ObjectParameter("englishCenterIcon", typeof(string));
    
            var englishCenterDescriptionParameter = englishCenterDescription != null ?
                new ObjectParameter("englishCenterDescription", englishCenterDescription) :
                new ObjectParameter("englishCenterDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_Update2", quizIdParameter, nameParameter, englishCenterParameter, englishCenterIconParameter, englishCenterDescriptionParameter);
        }
    
        public virtual ObjectResult<bq_User> qz_User_GetTop(Nullable<int> top)
        {
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_User>("qz_User_GetTop", topParameter);
        }
    
        public virtual ObjectResult<bq_User> qz_User_GetTop(Nullable<int> top, MergeOption mergeOption)
        {
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bq_User>("qz_User_GetTop", mergeOption, topParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_User_UpdateBestScore(Nullable<System.Guid> userId, Nullable<int> bestScore)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(System.Guid));
    
            var bestScoreParameter = bestScore.HasValue ?
                new ObjectParameter("bestScore", bestScore) :
                new ObjectParameter("bestScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_User_UpdateBestScore", userIdParameter, bestScoreParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_User_GetRanking(Nullable<int> bestScore)
        {
            var bestScoreParameter = bestScore.HasValue ?
                new ObjectParameter("bestScore", bestScore) :
                new ObjectParameter("bestScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_User_GetRanking", bestScoreParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> qz_Quiz_UpdateMaxScore(Nullable<System.Guid> quizId, Nullable<int> score)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("quizId", quizId) :
                new ObjectParameter("quizId", typeof(System.Guid));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("qz_Quiz_UpdateMaxScore", quizIdParameter, scoreParameter);
        }
    }
}
